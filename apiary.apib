FORMAT: 1A
HOST: https://api.previo.cz/app

# API - Previo PMS app

## Allowed HTTPs requests:
- `GET` - Get a resource or list of resources
- `POST` - To create resource
- `PUT` - Update resource
- `DELETE` - To delete resource

## Common status codes:
- `200` - success
- `204` - success on DELETE (no content)
- `400` – something's wrong with request (check error message and display to user)
- `401` - missing or invalid authentication
- `5XX` – there's something wrong with server.

## Errors

Every response could return an error. When this happens status code is `4XX` or `5XX` and response body contains JSON formatted response like this:

```
{
    code: 402 (number, required)
    error: Failed to get data from MySQL (string, required)
    message: Failed to get data (string, required)
}
```

##Headers
```
Authorization: {Base64(userEmail:password)}
X-Previo-App-ID: {appId}
X-Previo-Hotel-ID: {hotId}
```

#### X-Previo-App-ID
Identifying which application sends a request
- **`1` - Previo PMS app**

## Authentication [/authentication]

### Get access token [GET /authentication/accessToken{?code}]

+ Request (application/json)
    + Headers
    
            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            
+ Response 200 (application/json)
    + Attributes (Authentication)


### Refresh access token [GET /authentication/refreshToken{?refreshToken}]

+ Request (application/json)
    + Headers

            X-Previo-App-ID: 1
            Accept-Language: cs
            X-Previo-Hotel-ID: {hotId}

+ Parameters
    + refreshToken: 7e8HVcDWhnHnQCL8wqvKM95c7e8HVcDW (string,required) - The refresh token.
    
+ Response 200 (application/json)


## User [/user]

### Get user info [GET /user{?os}{?versionCode}]

+ Parameters
    + os: ios (string, required) - Operation system (ios. android)
    + versionCode: 33 (number, required) - Code of version aplication

+ Request (application/json)
    + Headers

            Authorization: Bearer 7e8HVcDWhnHnQCL8wqvKM95c7e8HVcDWfs556
            X-Previo-App-ID: 1
            Accept-Language: cs
            X-Previo-Hotel-ID: {hotId}

+ Response 200 (application/json)
    + Attributes (UserInfo)

### Get notiffication settings [GET /user/notificationSettings]

Structure:
    [
     'CommissionNew'    => ['Partner', 'Web', 'Canvas', 'Tip'],
     'CommissionStorno' => ['Partner', 'Canvas', 'Tip'],
     'UserTip'          => ['Partner', 'Web'],
    ];

+ Request (application/json)
    + Headers

            Authorization: Bearer 7e8HVcDWhnHnQCL8wqvKM95c7e8HVcDWfs556
            X-Previo-App-ID: 1
            Accept-Language: cs
            X-Previo-Hotel-ID: {hotId}

+ Response 200 (application/json)
    + Attributes (NotificationSettings)

### Update notiffication settings [POST /user/notificationSettings]

Structure:
    [
     'CommissionNew'    => ['Partner', 'Web', 'Canvas', 'Tip'],
     'CommissionStorno' => ['Partner', 'Canvas', 'Tip'],
     'UserTip'          => ['Partner', 'Web'],
    ];

+ Request (application/json)
    + Headers

            Authorization: Bearer 7e8HVcDWhnHnQCL8wqvKM95c7e8HVcDWfs556
            X-Previo-App-ID: 1
            Accept-Language: cs
            X-Previo-Hotel-ID: {hotId}
            
    + Attributes (NotificationSettings)

+ Response 200 (application/json)
    + Attributes (NotificationSettings)


## Reservation [/reservation]

### Get reservation [GET /reservation{?resId}{?comId}]

Get a whole reservation object - supports group reservations.

+ Parameters
    + resId: 26345103 (number, required) - The unique identifier for group reservation

+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}

+ Response 200 (application/json)
    + Attributes (Reservation)

### Create/Update reservation [POST /reservation/{?isRecalculatePrice}]

Create/Update reservation.
If resId set, then update reservation

+ Parameters
    + isRecalculatePrice: true (bool, required) - If true price recalculate

+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}
            
    
    + Attributes (ReservationRequest)

+ Response 200 (application/json)
    + Attributes (Reservation)

### Create/Update guests [POST /reservation/guest{?comId}]

Update an existing guest, if `gueId` is specified.
Create a new guest, when `gueId` is null.
All guests of the commission should be included in the call.

+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}

    + Attributes
         + comId: 52225 (number, required) - The unique identifier for commission of reservation
         + guests (array[Guest])

+ Response 200 (application/json)
    + Attributes (array[Guest])
    

### Create/Update company [POST /reservation/company/]

Update company information if `parId` is specified.
Create a new company, if `parId` is null.

+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}

    + Attributes (Company)

+ Response 200 (application/json)
    + Attributes (Company)

### Delete commission [DELETE /reservation/{?comId}]

Delete one commission by `comId`.

***UNTESTED**

+ Parameters
    + comId: 11994846 (number, required) - The unique identifier for commission
    
+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}

+ Response 204 (application/json)

### Delete reservation [DELETE /reservation/{?resId}]

Delete a whole reservation by `resId`.

***UNTESTED**

+ Parameters
    + resId: 11994846 (number, required) - The unique identifier for reservation
    
+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}

+ Response 204 (application/json)


## Account [/account]

`!! SHOW ALL CHANGES IN RESERVATION HISTORY !!`

### Get account [GET /account{?resId}{?comId}]

Get the account information for a reservation by `resId` or `comId`
If resId is defined, all commissions with commission account info is returned.
If comId is defined, only a commission account info is returned.

+ Parameters
    + resId: 11994846 (number,optional) - The unique identifier for reservation
    + comId: 12785431 (number,optional) - The unique identifier for commission. 
    If comId is not set, then return group account.
    
+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}
    
+ Response 200 (application/json)
    + Attributes (CommissionAccount)

### Add/Update item at account [POST /account{?comId}{?isGroup}]

Add/Update an item to reservation (group) account or a commissions (single) account.

+ Parameters
    + comId: 11994846 (number,required) - The unique identifier for commission of reservation (add item at room/commission account)
    + isGroup: true (bool,required) - If isGroup si true, then the item is added/updated to the group account    
+ Request (application/json)
    + Headers
    
            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}
    
   + Attributes (AddAccountItem)

+ Response 200 (application/json)
    + Attributes (CommissionAccount)

    
### Get recalculate price [POST /account/recalculatePrice{?isGroup}]

Get old account and new recalculate account.

+ Parameters
    + isGroup: true (bool,required) - If isGroup si true, then the item is recalculate to the group account  

+ Request (application/json)
    + Headers
    
            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}
    
   + Attributes (ReservationRequest)

+ Response 200 (application/json)
    + Attributes
        + oldAccount: [CommissionItem] (required)
        + newAccount: [CommissionItem] (required) 
        
    

### Delete item [DELETE /account{?coaId}]

Delete a specific account item by `coaId`.

+ Parameters
    + coaId: 213 - (number, required) - The unique identifier for account item

+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}

+ Response 204 (application/json)
    + Attributes (CommissionAccount)
    
## Hotel [/hotel]

### Get hotels [GET /hotel]

Get all hotels a signed up user belongs to.

+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}

+ Response 200 (application/json)
    + Attributes (array[Hotel])

## Premises [/premise]

### Get list of premise kinds [GET /premise/kind{?obtId}]

Get all premises kinds.

+ Parameters
    + obtId: 1 (number,required) - The unique identifier for premise type (1 - room, 2 - others)

+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}
    
+ Response 200 (application/json)
    + Attributes (array[PremiseKind])

### Get list of premises [GET /premise]

Get all premises.

+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}
    
+ Response 200 (application/json)
    + Attributes (array[Premise])

### Get premises with availability in term [GET /premise/availability{?from}{?to}]

+ Parameters
    + from: `2017-04-12 14:30:00` (string, required) - Date check-in reservation (YYYY-MM-DD'T'HH:mm:ss'Z')
    + to: `2017-04-16 12:30:00` (string, required) - Date check-out reservation (YYYY-MM-DD'T'HH:mm:ss'Z')

+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}

+ Response 200 (application/json)
    
    + Attributes (array[PremiseAvailable])

### Get free premises [GET /premise/freeObjects{?from}{?to}{?comId}]

+ Parameters
    + from: `2017-04-12 14:30:00` (string, required) - Date check-in reservation (YYYY-MM-DD'T'HH:mm:ss'Z')
    + to: `2017-04-16 12:30:00` (string, required) - Date check-out reservation (YYYY-MM-DD'T'HH:mm:ss'Z')
    + comId: 11994846 (number,optional) - The unique identifier for commission of reservation

+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}

+ Response 200 (application/json)
    
    + Attributes (FreeObjects)

### Get stop sales on canvas [GET /premise/closed{?from}{?to}]

+ Parameters
    + from: `2019-01-12T14:30:00Z` (string, required) - Date check-in reservation (YYYY-MM-DD'T'HH:mm:ss'Z')
    + to: `2020-04-16T12:30:00Z` (string, required) - Date check-out reservation (YYYY-MM-DD'T'HH:mm:ss'Z')

+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}

+ Response 200 (application/json)
    
    + Attributes (array[StopSales])

## Meal [/meal]

### Is meal avalible in term [GET /meal{?from}{?to}]

+ Parameters
    + from: `2017-04-12T14:30:00Z` (string, required) - Date check-in reservation (YYYY-MM-DD'T'HH:mm:ss'Z')
    + to: `2017-04-16T12:30:00Z` (string, required) - Date check-out reservation (YYYY-MM-DD'T'HH:mm:ss'Z')

+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}
    
+ Response 200 (application/json)
    + Attributes (MealAvalible)


## Statistic [/statistic]

### Get dashboard data [GET /statistic/dashboard{?date}]

`In development`

***UNTESTED**

+ Parameters
    + date: `2017-04-12T00:00:00Z` (string, required) - Load dashboatd data for this date (YYYY-MM-DD'T'HH:mm:ss'Z')

+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}
    
+ Response 200 (application/json)
    + Attributes (Dashboard)


## Review [/review]

### Get guests reviews [GET /review{?count}{?offset}]

`In development`

***UNTESTED**

+ Parameters
    + count: 50 (number, optional) - Count of return review
    + offset: 10 (number, optional) - Offset

+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}
    
+ Response 200 (application/json)
    + Attributes (array[Review])


## Suggest [/]

### Get reservations for canvas by filter [GET /suggest/reservationsForCanvas{?from}{?to}{?fulltext}{?count}{?offset}]

Get all reservation filtered by:

 - `from` (datetime in ISO 8601 format)
 - `to` (datetime in ISO 8601 format)
 - `fulltext` (string)
 
This endpoint is used to search reservations and to display canvas as well.

+ Parameters
    + from: `2017-04-12T12:12:30` (string, optional) - Date check-in reservation (ISO 8601)
    + to: `2017-04-16T22:32:12`(string, optional) - Date check-out reservation (ISO 8601)
    + fulltext: Jonh Wick (string, optional) - Search in voucher, contact person by name, phone and email (required send parametrs count and offset)
    + count: 20 (number, optional) - Count of items in responce array
    + offset: 40 (number, optional) - Offset of first item in array

+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}

+ Response 200 (application/json)
    + Attributes (array[ReservationSuggest])

### Get find reservations by filter [GET /suggest/findReservations{?from}{?to}{?fulltext}{?count}{?offset}]

Get all reservation filtered by:

 - `from` (datetime in ISO 8601 format)
 - `to` (datetime in ISO 8601 format)
 - `fulltext` (string)
 
This endpoint is used to search reservations and to display canvas as well.

+ Parameters
    + from: `2017-04-12T12:12:30` (string, optional) - Date check-in reservation (ISO 8601)
    + to: `2017-04-16T22:32:12`(string, optional) - Date check-out reservation (ISO 8601)
    + fulltext: Jonh Wick (string, optional) - Search in voucher, contact person by name, phone and email (required send parametrs count and offset)
    + count: 20 (number, optional) - Count of items in responce array
    + offset: 40 (number, optional) - Offset of first item in array

+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}

+ Response 200 (application/json)
    + Attributes (array[FindReservationSuggest])

### Contact person [GET /suggest/contactPerson{?fulltext}]

`In development`

Get a contact person by `fulltext` query.

***UNTESTED**

+ Parameters
    + fulltext: Jonh Wick (string, optional) - Search in contact person by name, phone and email

+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}
    
+ Response 200 (application/json)
    + Attributes (array[ContactPerson])

### Guest [GET /suggest/guest{?fulltext}]

`In development`

Get a guest by `fulltext` query.

***UNTESTED**

+ Parameters
    + fulltext: Jonh Wick (string, optional) - Search in guest firtname, surname, email and phone

+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}
    
+ Response 200 (application/json)
    + Attributes (array[GuestSuggest])

### Company [GET /suggest/company{?fulltext}]

Get a company by `fulltext` query.

+ Parameters
    + fulltext: SpaceX (string, optional) - Search in company name, IČ, DIČ

+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}
    
+ Response 200 (application/json)
    + Attributes (array[Company])

### Account Items [GET /suggest/accountItems{?fulltext}{?obkIds}{?from}{?to}{?curId}{?allGuestsCount}]

Get account items by `fulltext` query.

+ Parameters
    + fulltext: vine (string, optional) - Search by query, result is limited when fulltext is empty
    + obkIds: 464461, 470986 (array, optional) - Premise kind ids
    + from: `2014-02-15T00:00:00Z` (string, required) - Term from in Y-m-d format
    + to: `2018-09-15T00:00:00Z` (string, required) - Term to in Y-m-d format
    + curId: 1 (number, optional) - Currency id, set to hotel's currency by default
    + allGuestsCount: 3 (number, optional) - Real count guest on room
    
+ Request (application/json)
    + Headers

            Authorization: {Base64(userEmail:password)}
            X-Previo-App-ID: 1
            X-Previo-Hotel-ID: {hotId}
    
+ Response 200 (application/json)
    + Attributes (array[AccountItem])


## System [/system]

### Code books [GET /system/codeBook]

Get all codebooks application needs:
 
 - `commissionStatuses`
 - `partners` - list of Previo Partners
 - `countries`
 - `currencies`
 - `identityTypes`
 - `accountRecalculationModels`
 - `accountItemTypes`
 - `meals`
 - `vats`
 - `licences`
 - `companyIdentificationNumbers`
 
+ Response 200 (application/json)
    + Attributes (CodeBook)


## Data Structure

## Authentication
+ accessToken: 7e8HVcDWhnHnQCL8wqvKM95c7e8HVcDW (string,required) - Access token to be used when acessing resources.
+ tokenType: Bearer (string, required) - The type of the token issued - in this case it will allways be Bearer.
+ refreshToken: 6T8pcDWhnHnQCL8wqvKM95c7e8HVcDW (string,required) - The refresh token, which can be used to obtain new access tokens.

## Reservation
+ resId: 71994 (number, required) - The unique identifier for reservation
+ pin: NETA9Q (string, optional) - The unique code of reservation for My Alfred app
+ commissions (array[Commission], required)
+ contactPerson (ContactPerson, optional)
+ note: Lorem ipsum dolor sit amet... (string, optional) - Note for the reservations with <b> <i> <u> HTML tags
+ price: 2000 (number) - Total price of reservation
+ paid: 1000 (number) - Amount alreaddy paid
+ curId: 1 (number) - Currency

## Commission
+ comId: 52225 (number, required) - The unique identifier for commission of reservation
+ objId: 6323 (number, required) - The unique identifier for the room
+ prpId: 1 (number, optional) - The unique identifier for Previo partner (Booking.com, Hotel.cz, Expedia.com, ...)
+ cosId: 1 (number, required) - The unique identifier for status of commission
+ voucher: 20130704 (string, optional) - Voucher for commission
+ pin: NETA9Q (string, optional) - The unique code of commission for My Alfred app
+ startDate: `2018-01-21T10:59` (string, required) - Date check-in reservation (ISO 8601)
+ endDate: `2018-02-03T10:59` (string, required) - Date check-out reservation (ISO 8601)
+ created: `2017-05-23T10:59` (string, required) - Create date of commission (ISO 8601)
+ statusDate: `2017-05-23T10:59` (string, optional) - Date of expiration option (ISO 8601)
+ note: Lorem ipsum dolor sit amet... (string, optional) - Note for the commission with <b> <i> <u> HTML tags
+ isLocked: true (boolean, optional) - Locks comission so that it cannot be moved on canvas.
+ guestCount: 3 (number, required) - Count of guests on this room
+ guestsCountWithoutBed: 2 (number, optional) -  Number of guests from extra bed category
+ guests (array[Guest], required)
+ company (Company)

## CommissionRequest
+ comId: 52225 (number, optional) - The unique identifier for commission of reservation. If comId set, then update commission
+ objId: 6323 (number, required) - The unique identifier for the room
+ prpId: 1 (number, optional) - The unique identifier for Previo partner (Booking.com, Hotel.cz, Expedia.com, ...)
+ cosId: 1 (number, required) - The unique identifier for status of commission
+ voucher: 20130704 (string, optional) - Voucher for commission
+ startDate: `2018-01-21T10:59` (string, required) - Date check-in reservation (ISO 8601)
+ endDate: `2018-02-03T10:59` (string, required) - Date check-out reservation (ISO 8601)
+ created: `2017-05-23T10:59` (string, required) - Create date of commission (ISO 8601)
+ statusDate: `2017-05-23T10:59` (string, optional) - Date of expiration option (ISO 8601)
+ note: Lorem ipsum dolor sit amet... (string, optional) - Note for the commission with <b> <i> <u> HTML tags
+ isLocked: true (boolean, optional) - Locks comission so that it cannot be moved on canvas.
+ guestsCount: 3 (number, optional) -  Number of guests in commission
+ guestsCountWithoutBed: 2 (number, optional) -  Number of guests from extra bed category

## ReservationRequest
+ resId: 71994 (number, optional) - The unique identifier for reservation. If resId set, then update reservation
+ commissions (array[CommissionRequest], required)
+ contactPerson (ContactPerson, optional)
+ note: Lorem ipsum dolor sit amet... (string, optional) - Note for the reservations with <b> <i> <u> HTML tags

## ReservationSuggest
+ resId: 71994 (number, required) - The unique identifier for reservation
+ commissions (array[CommissionSuggest], required)
+ contactPersonName: Elon Musk (string, optional) - Name of contact person

## FindReservationSuggest
+ comId: 643 (number, required) - The unique identifier for commission of reservation
+ resId: 71994 (number, required) - The unique identifier for reservation
+ objId: 569 (number, required) - The unique identifier for object
+ obkId: 2341 (number, required) - The unique identifier for premise kind
+ cosId: 1 (number, required) - The unique identifier for status of commission
+ curId: 1 (number,required) - The unique identifier for currency
+ parId: 2412 (number, optional) - The unique identifier for company
+ startDate: `2018-01-21T10:59` (string, required) - Date check-in reservation (ISO 8601)
+ endDate: `2018-02-03T10:59` (string, required) - Date check-out reservation (ISO 8601)
+ voucher: 20130704 (string, required) - Voucher for commission
+ objName: Suite (string, required) - Name of object
+ obkName: Suite (string, required) - Name of kind object
+ partnerName: Elon Musk (string, optional) - Name of partner
+ contactName: Elona Muskova (string, optional) - Contact name
+ contactPhone: +420758963741 (string, optional) - Contact phone
+ contactEmail: elon@spacex.com (string, optional) - Contact email
+ guestNames: Elon Musk (string, optional) - Names of guests
+ schIds: 1,5,9 (array, optional) - Ids of schedulers
+ isGroup: false (boolean, required) - Is group or single reservation
+ isOnActiveScheduler: false (boolean, required) - Is on activate scheduler
+ commissionsCount: 3 (number, required) - Count of commission
+ displayString: 18.7.2019 - 19.7.2019 | * | 20170155 | Elon Musk (string, required) - Title in scheduler
+ type: 0 (number, required) - Commission type 0 - basic, 1 - floating
+ associatedComIds: 158978,58989,98898 (array, optional) - Associated com ids
+ guestCount: 2 (number, required) - Count of guests
+ guestCountWithoutBed: 2 (number, required) - Count guests without bed


## CommissionSuggest
+ comId: 643 (number, required) - The unique identifier for commission of reservation
+ prpId: 1 (number, optional) - The unique identifier for Previo partner (Booking.com, Hotel.cz, Expedia.com, ...)
+ cosId: 1 (number, required) - The unique identifier for status of commission
+ startDate: `2018-01-21T10:59` (string, required) - Date check-in reservation (ISO 8601)
+ endDate: `2018-02-03T10:59` (string, required) - Date check-out reservation (ISO 8601)
+ guestName: Elon Musk (string, optional) - Name of first filled guest
+ guestCount: 3 (number, required) - Count of guests on this room
+ companyName: Previo - Name of company
+ color: #FF6600 (string, optional) Color of company
+ objId: 569 (number, required) - The unique identifier for object
+ voucher: 20130704 (string, required) - Voucher for commission


## Guest
+ gueId: 9366 (number,optional) - The unique identifier for guest per hotel
+ guaId: 1 (number, required) - The unique identifier for guest category
+ meaId: 1 (number, optional) - The unique identifier for guest meal
+ firstName: David (string, optional)
+ lastName: O'Sheen (string, optional)
+ email: user@example.com (string, optional)
+ phone: +420 421 123 987 (string, optional)
+ recreation: true (boolean, required) - The guest will pay the city fee
+ recreationString: Work trip (string, optional) 
+ birthDate: `2017-05-24T00:00:00` (string, optional) - (ISO 8601)
+ birthPlace: Ostrava (string, optional) - Place of birth
+ sex: m (string, optional) - The unique identifier for guest gender ('m'- male; 'f'- female)
+ address (AddressGuest, required)
+ visa: 324ERTCVGHJIU (string, optional)
+ numberPlate: 7A7 2K3S (string, optional) - Number plate of guest`s car
+ identity (Identity, optional)

## GuestSuggest
+ gueId: 34590366 (number,required) - The unique identifier for guest per hotel
+ guaId: 1 (number, required) - The unique identifier for guest category
+ firstName: David (string, optional)
+ lastName: O'Sheen (string, optional)
+ email: radim@vaculik.cz (string, optional)
+ phone: +420 421 123 987 (string, optional)
+ birthDate: `2017-05-24T00:00:00Z` (string, optional) - (YYYY-MM-DD'T'HH:mm:ss'Z') https://cs.wikipedia.org/wiki/ISO_8601
+ sex: m (string, optional) - The unique identifier for guest gender ('m'- male; 'f'- female)
+ address (AddressGuest, required)
+ visa: 324ERTCVGHJIU (string, optional)
+ numberPlate: 7A7 2K3S (string, optional) - Number plate of guest`s car
+ identity (Identity, optional)

## AddressGuest
+ street: Panska (string, optional)
+ streetNumber: 6 (string, optional)
+ city: Brno (string,optional)
+ zip: 60200 (string,optional)
+ couId: 1 (number,optional) - The unique identifier for country
+ streetType: Zbytecna utca (string, optional)
+ cifId: 249

## ContactPerson
+ name: Elon Musk (string, optional)
+ email: elon.musk@spacex.com (string, optional)
+ phone: +420 340 233 034 (string, optional)

##Company
+ parId: 2412 (number, optional) - The unique identifier for company
+ shortcut: Previo (string, optional)
+ name: Previo s.r.o. (string, optional)
+ color: #FF6600 (string, optional) Color of company
+ address (AddressCompany, optional)
+ companyIdentifications (array[CompanyIdentification], optional)

## AddressCompany
+ street: Panska (string, optional)
+ streetNumber: 6 (string, optional)
+ city: Brno (string, optional)
+ zip: 60200 (string, optional)
+ couId: 1 (number, optional) - The unique identifier for country

## CompanyIdentification
+ value: 233MK2 (string, optional) - Value of IČ, DIČ etc..
+ identificationNumber: 1 (number, required) - Type of company identification (CompanyIdentificationNumber)

## Identity
+ number: N5646645 (string, optional)
+ guiId: 1 (number, optional) - The unique identifier for guest identity type

## IdentityType
+ guiId: 2 (number, required)
+ name: passport (string, required) - Name of identity type

## AccountRecalculationModel
+ armId: 1 (number, optional)
+ name: chci přepočítávat s potvrzením (string, optional) - Name of account recalculation model
+ description: Po změně parametrů rezervace se účet rezervace automaticky přepočítá a případné změny musí potvrdit uživatel. (string, optional) - Description of account recalculation model

## AccountItemTypeModel
+ aitId: 5 (number, required)
+ name: Ubytování (string, required) - Name of account item type
+ automated: true (boolean, required) - false - non-automated account item type, true - automated account item type
+ issued: true (boolean, required) - true - automatically issued account item type - generated automatically from price settings using account issuer, false - manually added account item
+ affectedByAccommodation: true (boolean, required) - true - account item price may be affected by the accommodation price, false - account item price is independent of the accommodation price
+ partOfAccommodation: true (boolean, required) - true - account item of this type is part of the accommodation (partner bonuses are calculated from these account items), false - account item of this type is not part of the accommodation

## CommissionAccount
+ comId: 52225 (number, optional) - The unique identifier for commission of reservation
+ total: 200.21 (number, required) - Total price af room account
+ paid: 120 (number, required) - Amount paid
+ curId: 1 (number,required) - The unique identifier for currency
+ items (array[AccountItem])

## GroupAccount
+ total: 200.21 (number, required) - Total price af room account
+ curId: 1 (number,required) - The unique identifier for currency
+ accountItems (array[AccountItem])

## AccountItem
+ coaId: 213 (number, required) - The unique identifier for account item
+ aitId: 5 (number, required) - 'Account item type ID'
+ name: Welness (string, required)
+ count: 2 (number, required) - Count of this items at account
+ price: 20.31 (number, required)
+ vatId: 1 (number, required) - The unique identifier for vat
+ stoId: 256 (number, optional) - If it is a stock item, then value is integer, else null
+ styId: 958 (number, optional) - If it is a stay package, then value is integer, else null
+ pckId: 15656 (number, optional) - If it is a package, then value is integer, else null
+ position: 1 (number, optional) - Set position of account 1 is top.

## AddAccountItem
+ coaId: 213 (number, optional) - The unique identifier for account item from suggest
+ aitId: 5 (number, optional) - 'Account item type ID'
+ name: Welness (string, required) - Name of item
+ count: 2 (number, required) - Count of this items at account
+ price: 20.31 (number, required)
+ vatId: 1 (number, required) - The unique identifier for vat
+ stoId: 256 (number, optional) - If it is a stock item, then value is integer, else null
+ styId: 958 (number, optional) - If it is a stay package, then value is integer, else null
+ pckId: 15656 (number, optional) - If it is a package, then value is integer, else null
+ position: 1 (number, optional) - Set position of account 1 is top.

## Hotel
+ hotId: 14690 (number, required) - The unique identifier for hotel
+ name: Previo hotel (string, required) - Name of hotel
+ licId: 1 (number, required) - The unique identifier for license: 2 - pro, 3 - lite, 4 - connect, 5 - bridge, 7 - school
+ isVATPayer: false (boolean, required) - Is the hotel a VAT payer
+ armId: 1 (number, required) - ID for Account recalculation models: 1 - recalculate after confirmation, 2 - recalculate without confirmation, 3 - do not recalculate
+ arrival: `14:00:00` (string, required) - (HH:mm:ss'Z') Time of default check-in
+ departure: `10:00:00` (string, required) - (HH:mm:ss'Z') Time of default check-out
+ defaultCurId: 1 (number, required) - Default currency for the hotel
+ defaultMeaId: 1 (number, required) - Default meal for hotel
+ defaultGuaId: 1 (number, required) - Default guest category for the hotel
+ guestCategories (array[GuestCategory], required)
+ currencies: 1, 2 (array[number], required) - Support currency by hotel (curId)

## Currency
+ curId: 1 (number, required) - The unique identifier for currency
+ code: EUR (string, required) - Code of currency (ISO 4217)
+ symbol: € (string, required) - Symbol of currency
+ position: left (string, required) - Position of currency symbol

## GuestCategory
+ guaId: 1 (number, required) - The unique identifier for guest category
+ name: Senior (string, required)

## PremiseKind
+ obkId: 2341 (number, required) - The unique identifier for premise kind
+ name: Double (string, required) - Name of object type premise
+ capacity: 3 (number, required) - Number of bed
+ extraCapacity: 2 (number, required) - Number of extra bed

## Premise
+ objId: 6323 (number, required) - The unique identifier for the premise
+ obkId: 2341 (number, required) - The unique identifier for premise kind
+ name: Space (string, required) - Name of the premise
+ order: 1 (number, required) - Position of the object on the canvas

## PremiseAvailable
+ objId: 6323 (number, required) - The unique identifier for the premise
+ isStop: true (boolean, required) - There is a STOP on the premise in given term
+ isOccupied: true (boolean, required) - There is a reservation/s going on in given term

## FreeObjects
+ free: 622777,622466,622467 (array[number], required) - Free objects
+ freeOnClosed: 618315,621898 (array[number], required) - Free objects on stop sales
+ freeOnContingent: 622464 (array[number], required) - Free objects contingent

## UserInfo
+ versionSupported: true (boolean, required) - Is version of aplication supported
+ newerVersion: false (boolean, required) - Is avalible newer version
+ permission (Permission, required) - Listed permissions for users

## NotificationSettings
+ 1: 1, 2, 3 (array[number]) - Key is notification type as CommissionNew, CommissionStorno, UserTip
+ 2: 1, 2, 3 (array[number]) - Key is notification type as CommissionNew, CommissionStorno, UserTip
+ 3: 4 (array[number]) - Key is notification type as UserTip

## NotificationSubject
+ 0:1 (number, optional) - Value is notification subject as 'Partner', 'Web', 'Canvas', 'Tip'
+ 1:2 (number, optional) - Value is notification subject as 'Partner', 'Web', 'Canvas', 'Tip'
+ 2:3 (number, optional) - Value is notification subject as 'Partner', 'Web', 'Canvas', 'Tip'

## Permission
+ modules (ModulePermission, required) - Permission to view the module
+ privileges (Privileges, required) - Permission for each operations

## ModulePermission
+ reservationsCanvas: true (boolean, required) - Permission for view on canvasRemove atribut 
+ search: true (boolean, required) - Permission for search
+ dashboard: true (boolean, required) - Permission for view on dashboard
+ prices: true (boolean, required) - Permission for view into price modul
+ closedRooms: true (boolean, required) - Permission for view into close rooms modul

## Privileges
+ reservations (ReservationPermission, required) - Modify items in reservation by reservation status
+ companies (CompanyPermission, required) - Permission to add/edit/delete companies
+ reviews (ReviewPermission, required) - Permission to edit/delete reviews
+ prices (PricePermission, required) - Permission to edit prices

## ReservationPermission
+ option (ReservationStatusPermission, required) - 
+ confirmed (ReservationStatusPermission, required) - 
+ checkedIn (ReservationStatusPermission, required) - 
+ checkedOut (ReservationStatusPermission, required) - 
+ others (ReservationStatusPermission, required) - 
+ waitingList (ReservationStatusPermission, required) - 
+ cancelled (ReservationStatusPermission, required) - 
+ noShow (ReservationStatusPermission, required) - 

## ReservationStatusPermission
+ add: true (boolean, required) - Permission for adding new reservations
+ edit: true (boolean, required) - Permission for editing reservations
+ editChangeStatus: true (boolean, required) - Permission for changing status
+ editHotelAccountEditItemVatRateEdit: true (boolean, required) - Permission for changing vat value
+ editHotelAccountEditItemPriceEdit: true (boolean, required) - Permission for changing price on room account
+ editHotelAccountItemRemove: true (boolean, required) - Permission for changing deleting items on room account
+ editReservationNoteEdit: true (boolean, required) - Permission for editing reservation note
+ editHotelAccountOwnItemAdd: true (boolean, required) - Permission for adding new own item on hotel account
+ editLock: true (boolean, required) - Permission for locking the reservation
+ editUnlock: true (boolean, required) - Permission for unlocking the reservation
+ editHotelAccountItemFromWhispererAdd: true (boolean, required) - Permission for adding new suggested item on hotel account (aka https://www.csfd.cz/film/7598-zarikavac-koni/prehled/)
+ editHotelAccountEditItemNameEdit: true (boolean, required) - Permission for editing item name
+ editHotelAccountEditItemCountEdit: true (boolean, required) - Permission for editing item count

## CompanyPermission
+ add: true (boolean, required) - Permission for add company 
+ edit: true (boolean, required) - Permission for edit company

## ReviewPermission
+ edit: true (boolean, required) - Permission for editing reviews (Reply to reviews)
+ remove: true (boolean, required) - Permission for delete review

## PricePermission
+ edit: true (boolean, required) - Permission for editing price of rooms
+ closedRoomsEdit: true (boolean, required) - Permission for closing/opening rooms for partners (Reservation+, Booking.com, Hotel.cz, atd...)

## PrivilegesDEPRECATED
+ reservation: 3 (number, required) - Permission at reservation
+ managerReports: 1 (number, required) - Permission at  managers reports
+ guestReviews: 1 (number, required) - Permission at guest reviews

## Meal
+ meaId: 1 (number, required) - The unique identifier for meal
+ name: All inclusive (string, required)

## MealAvalible
+ 83326 : 1,2,3 (array, optional) - guaId : [meaIds]
+ 83329 : 2 (array, optional) - guaId : [meaIds]

## NotificationSetting
+ newCanvas: true (boolean, required) - Send notification at new reservation from canvas
+ newPartner: false (boolean, required) - Send notification at new reservation from partners (Booking.com, Hotel.cz, Expedia.com, ...)
+ newWeb: true (boolean, required) - Send notification at new reservation from Reservation+
+ cancelCanvas: true (boolean, required) - Send notification at cancel reservation from canvas
+ cancelPartner: false (boolean, required) - Send notification at cancel reservation from partners (Booking.com, Hotel.cz, Expedia.com, ...)
+ cancelWeb: true (boolean, required) - Send notification at cancel reservation from Reservation+
+ userTip: true (boolean, required) - Send notification with user tip (link at web-site)

## Dashboard
+ curId: 1 (number, required) - The unique identifier for currency
+ roomOccupancy: 30 (number, required) - Percent occupancy of rooms
+ bedOccupancy: 25 (number, required) - Percent occupancy of beds
+ revenues: 3234 (number, required) - Revenues for selected date
+ revpar: 532 (number, required) - Revpar for selected date
+ adr: 43 (number, required) - Adr for selected date
+ pickup: 23 (number, required) - Pickup for selected date
+ arrival: 22 (number, required) - Count of arrival reservation at selected date
+ departure: 12 (number, required) - Count of departure reservation at selected date
+ create: 12 (number, required) - Number of created reservation at selected date
+ optionsExpiring: 3 (number, required) - Number of expiration option at selected date
+ revparLastYear: 332 (number, required) - Revpar for same date at last year
+ adrLastYear: 23 (number, required) - Adr for same date at last year

## Review
+ startDate: `2017-05-21T10:59Z` (string,required) - Date check-in reservation (YYYY-MM-DDTHH:mm:ssZ) https://cs.wikipedia.org/wiki/ISO_8601
+ endDate: `2017-05-23T10:59Z` (string,required) - Date check-out reservation (YYYY-MM-DDTHH:mm:ssZ) https://cs.wikipedia.org/wiki/ISO_8601
+ voucher: 557ER32 (string, required) - Voucher of commission
+ created: `2017-05-23T10:59Z` (string, required) - Date od created review (YYYY-MM-DDTHH:mm:ssZ) https://cs.wikipedia.org/wiki/ISO_8601
+ service: 2 (number, optional) - Services (1 to 10)
+ staff: 10 (number, optional) - Staff (1 to 10)
+ clean: 7 (number, required) - Cleanness (1 to 10)
+ comfort: 2 (number, required) - Comfort (1 to 10)
+ ratio: 4 (number, required) - Price / value ratio (1 to 10)
+ positiveMessage: Good location, and new forniture (string, optional) - Positive text of review
+ negativeMessage: Noisy rooms (string, optional) - Negative text of review
+ privateMessage: Difficult to sleep when the neighbour is watching the tv in a normal volume (string, optional) - Private message to hotel personal
+ guestName: Jonh Wick (string, optional) - Guest name, send NULL if anonym
+ guestCountry: USA (string, optional) - Guest country
+ guestTown: Bejrút (string, optional) - Guest town

## CodeBook
+ commissionStatuses (array[ComissionStatus])
+ partners (array[Partner])
+ countries (array[Country]
+ currencies (array[Currency])
+ identityTypes (array[IdentityType])
+ accountRecalculationModels (array[AccountRecalculationModel])
+ accountItemTypes (array[AccountItemTypeModel])
+ meals (array[Meal])
+ vats (array[Vat])
+ licences (array[License])
+ companyIdentificationNumbers (array[CompanyIdentificationNumber])
+ countryInvoiceFields (array[countryInvoiceFields])

##StopSales
+ objId: 6323 (number, required) - The unique identifier for the room
+ startDate: `2017-05-21T10:59Z` (string,required) - Date check-in reservation (YYYY-MM-DDTHH:mm:ssZ) https://cs.wikipedia.org/wiki/ISO_8601
+ endDate: `2017-05-23T10:59Z` (string,required) - Date check-out reservation (YYYY-MM-DDTHH:mm:ssZ) https://cs.wikipedia.org/wiki/ISO_8601
+ id: `closed-61548984-568564646` (string, required) - The unique identifier for stopSales
+ type: 1 (number, required) - 1 : Closed, 5 : Availability
+ cls: `zone-closed` (string, required) - icon on admin canvas

## ComissionStatus
+ cosId: 1 (number, required) - The unique identifier for commission status
+ name: Option (string, required) - Name of reservation status
+ color: #FE8F01 (string, required) - Color for reservation status
+ showOnCanvas: true (boolean, required) - Show reservation on canvas

## Partner
+ prpId: 1 (number, required) - The unique identifier for Previo partner (Booking.com, Hotel.cz, Expedia.com, ...)
+ name: Booking.com (string, optional) - Name of Previo partner
+ logo: https://files.previo.cz/previoPartner/50x50/1.gif (string, required) - URL to partner logo

## Country
+ coutId: 1 (number, required) - The unique identifier for country
+ name: Czechia (string, required)

## Vat
+ vatId: 1 (number, required) - The unique identifier for VAT
+ name: 21% DPH (string, required) - Basic rate (string, required)

## License
+ licId: 1 (number, required) - The unique identifier for license
+ name: Pro (string, required) - Name of license

## CompanyIdentificationNumber
+ identificationNumer: 1 (number, required) - The unique identifier for company identification number
+ name: IČ (string, required) - Name of company identification number

##countryInvoiceFields
+ id: 1 (number, required) - The identifier for street type
+ name: utca (string, required) - Name of the street type