FORMAT: 1A
HOST: https://api.previo.cz/app

# Previo app API

## Allowed HTTPs requests:
- `GET` - Get a resource or list of resources
- `POST` - Update resource
- `PUT` - To create resource
- `DELETE` - To delete resource

## Common status codes:
- `200` - success
- `204` - success on DELETE (no content)
- `400` – something's wrong with request (check error message and display to user)
- `401` - missing or invalid authentication
- `5XX` – there's something wrong with server.

## Errors

Every response could return an error. When this happens status code is `4XX` or `5XX` and response body contains JSON formatted response like this:

```
{
    code: 402 (number, required)
    error: Failed to get data from MySQL (string, required)
    message: Failed to get data (string, required)
}
```

##Headers
```
Authorization: {Base64(userEmail:password)}
X-Previo-App-ID: {appId}
X-Previo-Hotel-ID: {hotId}
X-Previo-Language-ID: {lanId}
```

#### X-Previo-App-ID
Identifying which application sends a request
- **`1` - Previo, Hotelgram, eKasa**


## User [/user]

### Get user info [GET /user{?os}{?versionCode}]

+ Parameters
    + os: ios (string, required) - Operation system (ios. android)
    + versionCode: 33 (number, required) - Code of version aplication

+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (UserInfo)


## Reservation [/reservation]

`!! SHOW ALL CAHNGES IN RESERVATION HISTORY !!`

### Get reservations by filter [GET /reservation{?from}{?to}{?termType}{?statuses}{?fulltext}{?resId}{?obtId}{?count}{?offset}]

`In development`

+ Parameters
    + from: `2017-04-12T12:12:30` (date, optional) - Date check-in reservation (YYYY-MM-DD'T'HH:mm:ss'Z')
    + to: `2017-04-16T22:32:12`(date, optional) - Date check-out reservation (YYYY-MM-DD'T'HH:mm:ss'Z')
    + termType: overlap (string, optional) - Type of the searching term allowed values (created, check-in, check-out, overlap, modified)
    + statuses: 1 (number, optional) - (array) If empty search in all statuses
    + fulltext: Jakub Hrdý (string, optional) - Search in voucher, contact person and guest name, email, phone, company name
    + resId: 26345103 (number, optional) - The unique identifier for goup reservation
    + obtId: 1 - (array) The unique identifier for object type
    + count: 20 - (number, optional) - Count of return reservation object
    + offset: 50 - (number, optional) - Offset

+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (array[Reservation])

### Save new reservation [POST]

`In development`

+ Request (application/json)
    + Attributes (Reservation)

+ Response 200 (application/json)
    + Attributes (Reservation)

### Update reservation [PUT /reservation/{resId}]

`In development`

+ Parameters
    + resId: 11994846 (number, required) - The unique identifier for goup reservation

+ Request (application/json)
    + Attributes (Reservation)

+ Response 200 (application/json)
    + Attributes (Reservation)

### Delete commission [DELETE /commission/{comId}]

`In development`

+ Parameters
    + comId: 11994846 (number, required) - The unique identifier for commission
    
+ Request (application/json)

+ Response 204 (application/json)

### Delete reservation [DELETE /reservation/{resId}]

`In development`

+ Parameters
    + resId: 11994846 (number, required) - The unique identifier for reservation
    
+ Request (application/json)

+ Response 204 (application/json)


## Account [/account]

`!! SHOW ALL CAHNGES IN RESERVATION HISTORY !!`

### Get account [GET /account{?resId}]

`In development`

+ Parameters
    + resId: 11994846 (number,required) - The unique identifier for reservation
    
+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (Account)

### Add item at account [POST /account{?resId}{?comId}]

`In development`

+ Parameters
    + resId: 11994846 (number,required) - The unique identifier for reservation (add item at group account)
    + comId: 11994846 (number,required) - 12484225 (number,required) - The unique identifier for commission of reservation (add item at room/commission account)
    
+ Request (application/json)
   + Attributes (AccountItem)
   
+ Response 200 (application/json)
    + Attributes (Account)

### Update account [PUT /account{?resId}]

`In development`

+ Parameters
    + resId: 11994846 (number,required) - The unique identifier for reservation
    
+ Request (application/json)
   + Attributes (Account)
   
+ Response 200 (application/json)
    + Attributes (Account)

### Delete item [DELETE /account{?coaId}{?comId}]

`In development`

+ Parameters
    + coaId: 213 - (nuber, required) - The unique identifier for account item

+ Request (application/json)

+ Response 204 (application/json)

    
## Hotel [/hotel]

### Get hotels [GET /hotel]

`In development`

+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (array[Hotel])


## Room [/room]

### Get list of room kind [GET /room/kind]

`In development`

+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (array[RoomKind])

### Get list of rooms [GET /room]

`In development`

+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (array[Room])

### Get rooms in term [GET /room{?from}{?to}]

`In development`

+ Parameters
    + from: `2017-04-12 14:30:00` (date, required) - Date check-in reservation (YYYY-MM-DD'T'HH:mm:ss'Z')
    + to: `2017-04-16 12:30:00` (date, required) - Date check-out reservation (YYYY-MM-DD'T'HH:mm:ss'Z')

+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (array[RoomAvailable])


## Meal [/meal]

### Get list of meals [GET /meal]

`In development`

+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (array[Meal])

### Is meal avalible in term [GET /meal{?from}{?to}]

`In development`

+ Parameters
    + from: `2017-04-12 14:30:00` (date, required) - Date check-in reservation (YYYY-MM-DD'T'HH:mm:ss'Z')
    + to: `2017-04-16 12:30:00` (date, required) - Date check-out reservation (YYYY-MM-DD'T'HH:mm:ss'Z')

+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (array[MealAvalible])


## Notification - draft [/notification]
`Use OneSignal - do not program yet`

### Get notification setting - draft [GET /notification/device{?os}{?token}]

+ Parameters
    + os: ios (string, required) - Operation system (ios. android)
    + token: HBUTjih:uzg0987:65rtcvzOIU76... - Notification token
    
+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (NotificationSetting)

### Add notification setting - draft [POST /notification/device{?os}{?token}]

+ Parameters
    + os: ios (string, required) - Operation system (ios. android)
    + token: HBUTjih:uzg0987:65rtcvzOIU76... - Notification token
    
+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (NotificationSetting)

### Update notification setting - draft [PUT /notification/device{?os}{?token}]

+ Parameters
    + os: ios (string, required) - Operation system (ios. android)
    + token: HBUTjih:uzg0987:65rtcvzOIU76... - Notification token
    
+ Request (application/json)
    + Attributes (NotificationSetting)
    
+ Response 200 (application/json)
    + Attributes (NotificationSetting)


## Statistic [/statistic]

### Get dashboard data [GET /statistic/dashboard/{?date}]

`In development`

+ Parameters
    + date: `2017-04-12` (date, required) - Load dashboatd data for this date (YYYY-MM-DD'T'HH:mm:ss'Z')

+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (Dashboard)


## Review [/review]

### Get guests reviews [GET /review{?count}{?offset}]

`In development`

+ Parameters
    + count: 50 (number, optional) - Count of return review
    + offset: 10 (number, optional) - Offset

+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (array[Review])


## Suggest [/suggest]

### Contact person [GET /suggest/contactPerson{?fulltext}]

`In development`

+ Parameters
    + fulltext: Jonh Wick (string, optional) - Search in contact person by name, phone and email

+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (array[ContactPerson])

### Guest [GET /suggest/guest{?fulltext}]

`In development`

+ Parameters
    + fulltext: Jonh Wick (string, optional) - Search in guest firtname, surname, email and phone

+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (array[Guest])

### Company [GET /suggest/company{?fulltext}]

`In development`

+ Parameters
    + fulltext: SpaceX (string, optional) - Search in company name, IČ, DIČ

+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (array[Company])


## System [/system]

### Reservation status [GET /system/reservationStatus]

`In development`

+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (array[ReservationStatus])

### Get list of vats [GET /system/vat]

`In development`

+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (array[Vat])

### Get list of licenses [GET /system/license]

`In development`

+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (array[License])

### Get list of country [GET /system/country]

`In development`

+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (array[Country])

### Get partners logo [GET /system/partnerLogo]

`In development`

+ Request (application/json)
    
+ Response 200 (application/json)
    + Attributes (array[PartnerLogo])


## Data Structure

## Reservation
+ resId: 11994846 (number, required) - The unique identifier for reservation
+ curId: 1 (number, required) - The unique identifier for currency
+ commissions (array[Commission])
+ contactPerson (ContactPerson, optional)
+ note: Lorem ipsum dolor sit amet... (string, optional) - Note for the reservation

## Commission
+ comId: 12484225 (number, required) - The unique identifier for commission of reservation
+ objId: 6323 (number, required) - The unique identifier for the room
+ statusId: 1 (number, required) - The unique identifier for status reservation
+ voucher: 20130704 (string, required)
+ termFrom: `2017-05-21T10:59Z` (string, required) - Date check-in reservation (YYYY-MM-DDTHH:mm:ssZ) https://cs.wikipedia.org/wiki/ISO_8601
+ termTo: `2017-05-23T10:59Z` (string, required) - Date check-out reservation (YYYY-MM-DDTHH:mm:ssZ) https://cs.wikipedia.org/wiki/ISO_8601
+ created: `2017-05-23T10:59Z` (string, required) - Create date of commission (YYYY-MM-DDTHH:mm:ssZ) https://cs.wikipedia.org/wiki/ISO_8601
+ optionExpiration: `2017-05-23T10:59Z` (string, optional) - Date of expiration option (YYYY-MM-DDTHH:mm:ssZ) https://cs.wikipedia.org/wiki/ISO_8601
+ price: 250.34 (number, required) 
+ note: Lorem ipsum dolor sit amet... (string, optional) - Note for the commission
+ guest (array[Guest])
+ company (Company)
+ partner (Partner)

## Guest
+ gueId: 34590366 (number,required) - The unique identifier for guest per hotel
+ meaId: 1 (number, optional) - The unique identifier for guest meal
+ firstName: David (string, optional)
+ lastName: O'Sheen (string, optional)
+ email: radim@vaculik.cz (string, optional)
+ phone: +420 421 123 987 (string, optional)
+ category: 1 (number, required)
+ isRecreation: true (boolean, required) - The guest will pay the city fee
+ recreation: Work trip (string, optional) 
+ birthDate: `2017-05-24T00:00:00Z` (string, optional) - (YYYY-MM-DD'T'HH:mm:ss'Z') https://cs.wikipedia.org/wiki/ISO_8601
+ gender: 1 (number, required) - 1 man 2 woman 3 not defined
+ address (AddressGuest, optional)
+ visa: 324ERTCVGHJIU (string, optional)
+ licencePlateNumber: 7A7 2K3S (string, optional)
+ identity (Identity, optional)

## AddressGuest
+ street: Panska 6 (string, optional)
+ streetNumber: 6 (string, optional)
+ city: Brno (string,optional)
+ zip: 60200 (string,optional)
+ couId: 1 (number,optional) - The unique identifier for country

## ContactPerson
+ name: Elon Musk (string, optional)
+ email: elon.musk@spacex.com (string, optional)
+ phone: +420 340 233 034 (string, optional)

##Company
+ parId: 2412 (number, required) - The unique identifier for company
+ shortcut: Hotel.cz (string, optional)
+ name: Hotel.cz a. s. (string, optional)
+ ic: 2331491 (number, optional) 
+ dic: CZ2331491 (string, optional)
+ street: Řesnická 21 (string, optional)
+ city: Liberec 1 (string, optional)
+ zip: 460 01 (string, optional) 
+ couId: 1 (number, required) - The unique identifier for company

##Partner
+ prpId: 1 (number, required) - The unique identifier for Previo partner (Booking.com, Hotel.cz, Expedia.com, ...)
+ name: Booking.com (string, required) - Name of Previo partner

## Identity
+ number: 5646645 (number,required)
+ type: 1 (number,required)

## Account
+ curId: 1 (number,required) - The unique identifier for currency
+ commisions (array[CommissionAccount])
+ group (GroupAccount)

## CommissionAccount
+ comId: 12484225 (number,required) - The unique identifier for commission of reservation
+ total: 200.21 (number, required) - Total price af room account
+ accountItems (array[AccountItem])

## GroupAccount 
+ total: 200.21 (number, required) - Total price af room account
+ resId: 11994846 (number,required) - The unique identifier for reservation
+ accountItems (array[AccountItem])

## AccountItem
+ coaId: 213 (number, required) - The unique identifier for account item
+ name: Welness (string, required)
+ count: 2 (number, required) - Count of this items at account
+ price: 20.31 (number, required)
+ vatId: 1 (number, required) - The unique identifier for vat

## Hotel
+ hotId: 14690 (number, required) - The unique identifier for hotel
+ name: Previo hotel (string, required) - Name of hotel
+ licId: 1 (number, required) - The unique identifier for license: 2 - pro, 3 - lite, 4 - connect, 5 - bridge, 7 - school, 8 - eKasa
+ arrival: `14:00:00Z` (string, required) - (HH:mm:ss'Z') Time of default check-in
+ departure: `10:00:00Z` (string, required) - (HH:mm:ss'Z') Time of default check-out
+ defaultCurrency: 1 (number, required) - Default currency for the hotel
+ defaultMeal: 1 (number, required) - Default meal for hotel
+ defaultGuestCategory: 1 (number, required) - Default guset category for the hotel
+ guestCategory (array[GuestCategory])
+ currencies (array[Currency])

## Currency 
+ curId: 1 (number, required) - The unique identifier for currency
+ code: EUR (string, required)

## GuestCategory
+ guaId: 1 (number, required) - The unique identifier for guest category
+ name: Senior (string, required)

## RoomKind
+ obkId: 2341 (number, required) - The unique identifier for room kind
+ name: Double (string, required) - Name of object type room
+ bed: 3 (number, required) - Number of bed
+ extraBed: 2 (number, required) - Number of extra bed
+ count: 6 (number, required) - Total count of room type

## RoomKindPriceAndSTOP
+ obkId: 321 (number, required) - The unique identifier for room kind
+ plans (array[PricePlan])
+ stop: 3 (number, optional) - Count of STOP rooms

## Room
+ objId: 6323 (number, required) - The unique identifier for the room
+ obkId: 2341 (number, required) - The unique identifier for room kind
+ name: Space (string, required) - Name of the room

## RoomAvailable
+ objId: 6323 (number, required) - The unique identifier for the room
+ isStop: true (boolean, required) - There is a STOP in given term
+ isOccupied: true (boolean, required) - There is a reservation(s) going on in given term

## RoomStop
+ objId: 1231 (number, required) - The unique identifier for the room
+ terms (array[Term]) - List of terms stops at room

## Term
+ termFrom: `2017-05-21T10:59Z` (string, required) - Start at this date (YYYY-MM-DDTHH:mm:ssZ) https://cs.wikipedia.org/wiki/ISO_8601
+ termTo: `2017-05-21T10:59Z` (string, required) - End at this date (YYYY-MM-DDTHH:mm:ssZ) https://cs.wikipedia.org/wiki/ISO_8601

## UserInfo
+ paysApp: true (boolean, required) - Is user pay for aplication
+ language: 1 (number, required) - Language for user - DEPRECATED
+ lanId: 1 (number, required) - Language for user
+ versionSupported: true (boolean, required) - Is version of aplication supported
+ newerVersion: false (boolean, required) - Is avalible newer version
+ privileges (Permissions, required) - 1 - view, 3 - edit, 5 - delete, 7 - all

## PricePlan
+ plaId: 4533 (number, required) - The unique identifier for price plan
+ default (array[Price]) - Array of default prices in selected plan
+ nonRef (array[Price]) - Array of non-ref prices in selected plan
+ special (array[Price]) - Array of special prices in selected plan

## Price
+ price: 123.2 (number, required) - Price
+ curId: 1 (number, required) - Currency of price

## Permissions
+ reservation: 3 (number, required) - Permission at reservation
+ managerReports: 1 (number, required) - Permission at  managers reports
+ guestReviews: 1 (number, required) - Permission at guest reviews

## Meal
+ meaId: 1 (number, required) - The unique identifier for meal
+ name: All inclusive (string, required)

## MealAvalible
+ meaId: 1 (number, required) - The unique identifier for meal
+ isAvalible: true (boolean, optional) - Is meal avalible in term

## Country
+ couId: 1 (number, required) - The unique identifier for country
+ name: Czechia (string, required)

## Vat
+ vatId: 1 (number, required) - The unique identifier for VAT
+ name: VAT (string, required) - Basic rate (string, required)

## NotificationSetting
+ newCanvas: true (boolean, required) - Send notification at new reservation from canvas
+ newPartner: false (boolean, required) - Send notification at new reservation from partners (Booking.com, Hotel.cz, Expedia.com, ...)
+ newWeb: true (boolean, required) - Send notification at new reservation from Reservation+
+ cancelCanvas: true (boolean, required) - Send notification at cancel reservation from canvas
+ cancelPartner: false (boolean, required) - Send notification at cancel reservation from partners (Booking.com, Hotel.cz, Expedia.com, ...)
+ cancelWeb: true (boolean, required) - Send notification at cancel reservation from Reservation+
+ userTip: true (boolean, required) - Send notification with user tip (link at web-site)

## Dashboard
+ curId: 1 (number, required) - The unique identifier for currency
+ roomOccupancy: 30 (number, required) - Percent occupancy of rooms
+ bedOccupancy: 25 (number, required) - Percent occupancy of beds
+ revenues: 3234 (number, required) - Revenues for selected date
+ revpar: 532 (number, required) - Revpar for selected date
+ adr: 43 (number, required) - Adr for selected date
+ pickup: 23 (number, required) - Pickup for selected date
+ arrival: 22 (number, required) - Count of arrival reservation at selected date
+ departure: 12 (number, required) - Count of departure reservation at selected date
+ create: 12 (number, required) - Number of created reservation at selected date
+ optionsExpiring: 3 (number, required) - Number of expiration option at selected date
+ revparLastYear: 332 (number, required) - Revpar for same date at last year
+ adrLastYear: 23 (number, required) - Adr for same date at last year

## Review
+ termFrom: `2017-05-21T10:59Z` (string,required) - Date check-in reservation (YYYY-MM-DDTHH:mm:ssZ) https://cs.wikipedia.org/wiki/ISO_8601
+ termTo: `2017-05-23T10:59Z` (string,required) - Date check-out reservation (YYYY-MM-DDTHH:mm:ssZ) https://cs.wikipedia.org/wiki/ISO_8601
+ voucher: 557ER32 (string, required) - Voucher of commission
+ created: `2016-12-24` (string, required) - Date od created review
+ service: 2 (number, optional) - Services (1 to 10)
+ staff: 10 (number, optional) - Staff (1 to 10)
+ clean: 7 (number, required) - Cleanness (1 to 10)
+ comfort: 2 (number, required) - Comfort (1 to 10)
+ ratio: 4 (number, required) - Price / value ratio (1 to 10)
+ positiveText: Good location, and new forniture (string, optional) - Positive text of review
+ negativeText: Noisy rooms (string, optional) - Negative text of review
+ privateText: Difficult to sleep when the neighbour is watching the tv in a normal volume (string, optional) - Private message to hotel personal
+ guestName: Jonh Wick (string, optional) - Guest name, send NULL if anonym
+ guestCountry: USA (string, optional) - Guest country
+ guestTown: Bejrút (string, optional) - Guest town

## PartnerLogo
+ prpId: 1 (number, required) - The unique identifier for Previo partner (Booking.com, Hotel.cz, Expedia.com, ...)
+ logo: https://files.previo.cz/previoPartner/50x50/1.gif (string, required) - URL to partner logo

## ReservationStatus
+ staId: 1 (number, required) - The unique identifier for reservation status
+ name: Option (string, required) - Name of reservation status
+ color: #FE8F01 (string, required) - Color for reservation status
+ showOnCanvas: true (boolean, required) - Show reservation on canvas

## License
+ licId: 1 (number, required) - The unique identifier for license
+ name: Pro (string, required) - Name of license